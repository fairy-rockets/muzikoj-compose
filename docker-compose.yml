version: "3"

services:
  postgres:
    container_name: 'muzikoj_postgres'
    hostname: 'muzikoj_postgres'
    restart: always
    networks:
      - default
    env_file: .env
    environment:
      - 'POSTGRES_USER=funkwhale'
      - 'POSTGRES_PASSWORD=funkwhale'
      - 'POSTGRES_DB=funkwhale'
      - 'POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C'
      - 'TZ=Asia/Tokyo'
      - 'PGTZ=Asia/Tokyo'
      - 'POSTGRES_HOST_AUTH_METHOD=trust'
    image: postgres:alpine
    volumes:
      - ./var/postgres:/var/lib/postgresql/data
    networks:
      - 'muzikoj-link'

  redis:
    container_name: 'muzikoj_redis'
    hostname: 'muzikoj_redis'
    restart: always
    networks:
      - default
    env_file: .env
    image: redis:5
    volumes:
      - ./var/redis:/data
    networks:
      - 'muzikoj-link'

  celeryworker:
    container_name: 'muzikoj_celeryworker'
    hostname: 'muzikoj_celeryworker'
    restart: always
    image: funkwhale/funkwhale:${FUNKWHALE_VERSION:-latest}
    networks:
      - default
    depends_on:
      - postgres
      - redis
    env_file: .env
    # Celery workers handle background tasks (such file imports or federation
    # messaging). The more processes a worker gets, the more tasks
    # can be processed in parallel. However, more processes also means
    # a bigger memory footprint.
    # By default, a worker will span a number of process equal to your number
    # of CPUs. You can adjust this, by explicitly setting the --concurrency
    # flag:
    #   celery -A funkwhale_api.taskapp worker -l INFO --concurrency=4
    command: celery -A funkwhale_api.taskapp worker -l INFO --concurrency=${CELERYD_CONCURRENCY-0}
    environment:
      - C_FORCE_ROOT=true
    volumes:
      - "./var/funkwhale/music:${MUSIC_DIRECTORY_PATH-/music}:ro"
      - "./var/funkwhale/media:${MEDIA_ROOT}"
    networks:
      - 'muzikoj-link'

  celerybeat:
    container_name: 'muzikoj_celerybeat'
    hostname: 'muzikoj_celerybeat'
    restart: always
    image: funkwhale/funkwhale:${FUNKWHALE_VERSION:-latest}
    networks:
      - default
    depends_on:
      - postgres
      - redis
    env_file: .env
    command: celery -A funkwhale_api.taskapp beat --pidfile= -l INFO
    networks:
      - 'muzikoj-link'

  api:
    container_name: 'muzikoj_api'
    hostname: 'muzikoj_api'
    restart: always
    image: funkwhale/funkwhale:${FUNKWHALE_VERSION:-latest}
    networks:
      - default
    depends_on:
      - postgres
      - redis
    env_file: .env
    volumes:
      - "./var/funkwhale/music:${MUSIC_DIRECTORY_PATH-/music}:ro"
      - "./var/funkwhale/media:${MEDIA_ROOT}"
      - "./var/funkwhale/static:${STATIC_ROOT}"
      - "./var/funkwhale/frontend:/frontend"
    networks:
      - 'muzikoj-link'
    ports:
      - "5000"

  nginx:
    container_name: 'muzikoj_nginx'
    hostname: 'muzikoj_nginx'
    restart: always
    image: nginx
    networks:
      - default
    depends_on:
      - api
    env_file:
      - .env
    environment:
      # Override those variables in your .env file if needed
      - "NGINX_MAX_BODY_SIZE=${NGINX_MAX_BODY_SIZE-100M}"
    volumes:
      - "./nginx/funkwhale.template:/etc/nginx/conf.d/funkwhale.template:ro"
      - "./nginx/funkwhale_proxy.conf:/etc/nginx/funkwhale_proxy.conf:ro"
      - "./var/funkwhale/music:${MUSIC_DIRECTORY_PATH-/music}:ro"
      - "./var/funkwhale/media:${MEDIA_ROOT}:ro"
      - "./var/funkwhale/static:${STATIC_ROOT}:ro"
      - "./var/funkwhale/frontend:/frontend:ro"
    networks:
      - 'muzikoj-link'
      - 'planet-link'
    expose:
      - '80'
    command: >
        sh -c "envsubst \"`env | awk -F = '{printf \" $$%s\", $$1}'`\"
        < /etc/nginx/conf.d/funkwhale.template
        > /etc/nginx/conf.d/default.conf
        && cat /etc/nginx/conf.d/default.conf
        && nginx -g 'daemon off;'"

networks:
  default:
    driver: 'null'
  muzikoj-link:
    external: false
  planet-link:
    external: true
